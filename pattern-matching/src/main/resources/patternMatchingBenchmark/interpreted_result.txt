# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /Users/jakub.gardo/.sdkman/candidates/java/21-open/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: dev.jgardo.PatternMatchingBenchmark.ifElse

# Run progress: 0.00% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: 15387709.742 ops/s
# Warmup Iteration   2: 15444148.899 ops/s
# Warmup Iteration   3: 15503741.931 ops/s
Iteration   1: 15483039.642 ops/s
Iteration   2: 15503662.034 ops/s
Iteration   3: 15518672.648 ops/s
Iteration   4: 15565990.259 ops/s
Iteration   5: 15470704.981 ops/s
Iteration   6: 15535892.485 ops/s
Iteration   7: 15515671.865 ops/s
Iteration   8: 15531947.307 ops/s
Iteration   9: 15439086.970 ops/s
Iteration  10: 15500497.105 ops/s


Result "dev.jgardo.PatternMatchingBenchmark.ifElse":
  15506516.529 ±(99.9%) 54518.117 ops/s [Average]
  (min, avg, max) = (15439086.970, 15506516.529, 15565990.259), stdev = 36060.359
  CI (99.9%): [15451998.412, 15561034.647] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /Users/jakub.gardo/.sdkman/candidates/java/21-open/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: dev.jgardo.PatternMatchingBenchmark.patternMatching

# Run progress: 50.00% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: 3985707.719 ops/s
# Warmup Iteration   2: 4158603.673 ops/s
# Warmup Iteration   3: 4129729.040 ops/s
Iteration   1: 4125381.146 ops/s
Iteration   2: 4148764.286 ops/s
Iteration   3: 4136656.276 ops/s
Iteration   4: 4133313.719 ops/s
Iteration   5: 4128307.183 ops/s
Iteration   6: 4093089.344 ops/s
Iteration   7: 4122096.076 ops/s
Iteration   8: 4135589.995 ops/s
Iteration   9: 4125024.538 ops/s
Iteration  10: 4105315.542 ops/s


Result "dev.jgardo.PatternMatchingBenchmark.patternMatching":
  4125353.810 ±(99.9%) 24199.732 ops/s [Average]
  (min, avg, max) = (4093089.344, 4125353.810, 4148764.286), stdev = 16006.624
  CI (99.9%): [4101154.079, 4149553.542] (assumes normal distribution)


# Run complete. Total time: 00:00:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                  Mode  Cnt         Score       Error  Units
PatternMatchingBenchmark.ifElse           thrpt   10  15506516.529 ± 54518.117  ops/s
PatternMatchingBenchmark.patternMatching  thrpt   10   4125353.810 ± 24199.732  ops/s
