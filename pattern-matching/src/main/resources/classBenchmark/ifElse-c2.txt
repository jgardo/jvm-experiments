============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     272  570       4       dev.jgardo.ClassBenchmark::ifElse (209 bytes)
 total in heap  [0x000000011b9ba090,0x000000011b9bab38] = 2728
 relocation     [0x000000011b9ba1e8,0x000000011b9ba268] = 128
 main code      [0x000000011b9ba280,0x000000011b9ba988] = 1800
 stub code      [0x000000011b9ba988,0x000000011b9ba9a0] = 24
 oops           [0x000000011b9ba9a0,0x000000011b9ba9d0] = 48
 metadata       [0x000000011b9ba9d0,0x000000011b9baa08] = 56
 scopes data    [0x000000011b9baa08,0x000000011b9baa80] = 120
 scopes pcs     [0x000000011b9baa80,0x000000011b9bab20] = 160
 dependencies   [0x000000011b9bab20,0x000000011b9bab28] = 8
 nul chk table  [0x000000011b9bab28,0x000000011b9bab38] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x0000000170476040} 'ifElse' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'dev/jgardo/ClassBenchmark'
  # this:     rsi:rsi   = 'dev/jgardo/ClassBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x30]  (sp of caller)
  0x000000011b9ba280:   mov    0x8(%rsi),%r10d
  0x000000011b9ba284:   movabs $0x12f000000,%r11
  0x000000011b9ba28e:   add    %r11,%r10
  0x000000011b9ba291:   cmp    %r10,%rax
  0x000000011b9ba294:   jne    0x000000011b44a080           ;   {runtime_call ic_miss_stub}
  0x000000011b9ba29a:   xchg   %ax,%ax
  0x000000011b9ba29c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000000011b9ba2a0:   mov    %eax,-0x14000(%rsp)
  0x000000011b9ba2a7:   push   %rbp
  0x000000011b9ba2a8:   sub    $0x20,%rsp
  0x000000011b9ba2ac:   cmpl   $0x1,0x20(%r15)
  0x000000011b9ba2b4:   jne    0x000000011b9ba97a
  0x000000011b9ba2ba:   mov    %rsi,%rbx
  0x000000011b9ba2bd:   mov    0xc(%rsi),%r10d
  0x000000011b9ba2c1:   mov    0x8(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x000000011b9ba944
  0x000000011b9ba2c6:   lea    (%r12,%r10,8),%rbp
  0x000000011b9ba2ca:   cmp    $0x61b8,%r8d                 ;   {metadata('java/lang/Boolean')}
  0x000000011b9ba2d1:   jne    0x000000011b9ba33f
  0x000000011b9ba2d7:   test   %rdx,%rdx
  0x000000011b9ba2da:   nopw   0x0(%rax,%rax,1)
  0x000000011b9ba2e0:   je     0x000000011b9ba7d3
  0x000000011b9ba2e6:   cmpb   $0x0,0x40(%r15)
  0x000000011b9ba2eb:   jne    0x000000011b9ba5a5
  0x000000011b9ba2f1:   movl   $0xfff89fd4,0xc(%rbx)        ;   {oop("true"{0x00000007ffc4fea0})}
  0x000000011b9ba2f8:   mov    %rbx,%r10
  0x000000011b9ba2fb:   movabs $0x7ffc4fea0,%r11            ;   {oop("true"{0x00000007ffc4fea0})}
  0x000000011b9ba305:   xor    %r10,%r11
  0x000000011b9ba308:   shr    $0x16,%r11
  0x000000011b9ba30c:   test   %r11,%r11
  0x000000011b9ba30f:   je     0x000000011b9ba32c
  0x000000011b9ba311:   shr    $0x9,%r10
  0x000000011b9ba315:   movabs $0x120ec5000,%r8
  0x000000011b9ba31f:   add    %r10,%r8
  0x000000011b9ba322:   cmpb   $0x2,(%r8)
  0x000000011b9ba326:   jne    0x000000011b9ba5df
  0x000000011b9ba32c:   add    $0x20,%rsp
  0x000000011b9ba330:   pop    %rbp
  0x000000011b9ba331:   cmp    0x450(%r15),%rsp             ;   {poll_return}
  0x000000011b9ba338:   ja     0x000000011b9ba964
  0x000000011b9ba33e:   ret    
  0x000000011b9ba33f:   nop
  0x000000011b9ba340:   cmp    $0xe8d8,%r8d                 ;   {metadata('java/lang/String')}
  0x000000011b9ba347:   jne    0x000000011b9ba3f8
  0x000000011b9ba34d:   test   %rdx,%rdx
  0x000000011b9ba350:   je     0x000000011b9ba805
  0x000000011b9ba356:   data16 nopw 0x0(%rax,%rax,1)
  0x000000011b9ba360:   cmpb   $0x0,0x40(%r15)
  0x000000011b9ba365:   jne    0x000000011b9ba725
  0x000000011b9ba36b:   movl   $0xfff98261,0xc(%rbx)        ;   {oop(a 'java/lang/Integer'{0x00000007ffcc1308} = 4)}
  0x000000011b9ba372:   mov    %rbx,%r10
  0x000000011b9ba375:   movabs $0x7ffcc1308,%r11            ;   {oop(a 'java/lang/Integer'{0x00000007ffcc1308} = 4)}
  0x000000011b9ba37f:   xor    %r10,%r11
  0x000000011b9ba382:   shr    $0x16,%r11
  0x000000011b9ba386:   test   %r11,%r11
  0x000000011b9ba389:   je     0x000000011b9ba32c
  0x000000011b9ba38b:   shr    $0x9,%r10
  0x000000011b9ba38f:   movabs $0x120ec5000,%r8
  0x000000011b9ba399:   add    %r10,%r8
  0x000000011b9ba39c:   nopl   0x0(%rax)
  0x000000011b9ba3a0:   cmpb   $0x2,(%r8)
  0x000000011b9ba3a4:   je     0x000000011b9ba32c
  0x000000011b9ba3a6:   mov    0x48(%r15),%r10
  0x000000011b9ba3aa:   mov    0x58(%r15),%r11
  0x000000011b9ba3ae:   lock addl $0x0,-0x40(%rsp)
  0x000000011b9ba3b4:   cmpb   $0x0,(%r8)
  0x000000011b9ba3b8:   je     0x000000011b9ba32c
  0x000000011b9ba3be:   mov    %r12b,(%r8)
  0x000000011b9ba3c1:   test   %r10,%r10
  0x000000011b9ba3c4:   jne    0x000000011b9ba3e6
  0x000000011b9ba3c6:   mov    %r8,%rdi
  0x000000011b9ba3c9:   mov    %r15,%rsi
  0x000000011b9ba3cc:   movabs $0x10ad83e90,%r10
  0x000000011b9ba3d6:   call   *%r10
  0x000000011b9ba3d9:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba3e1:   jmp    0x000000011b9ba32c
  0x000000011b9ba3e6:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011b9ba3eb:   add    $0xfffffffffffffff8,%r10
  0x000000011b9ba3ef:   mov    %r10,0x48(%r15)
  0x000000011b9ba3f3:   jmp    0x000000011b9ba32c
  0x000000011b9ba3f8:   nopl   0x0(%rax,%rax,1)
  0x000000011b9ba400:   cmp    $0x25c88,%r8d                ;   {metadata('java/lang/Integer')}
  0x000000011b9ba407:   jne    0x000000011b9ba4c5
  0x000000011b9ba40d:   test   %rdx,%rdx
  0x000000011b9ba410:   je     0x000000011b9ba870
  0x000000011b9ba416:   data16 nopw 0x0(%rax,%rax,1)
  0x000000011b9ba420:   cmpb   $0x0,0x40(%r15)
  0x000000011b9ba425:   jne    0x000000011b9ba75f
  0x000000011b9ba42b:   movl   $0xc3f81af9,0xc(%rbx)        ;   {oop(a 'java/util/Collections$EmptyList'{0x000000061fc0d7c8})}
  0x000000011b9ba432:   mov    %rbx,%r10
  0x000000011b9ba435:   movabs $0x61fc0d7c8,%r11            ;   {oop(a 'java/util/Collections$EmptyList'{0x000000061fc0d7c8})}
  0x000000011b9ba43f:   xor    %r10,%r11
  0x000000011b9ba442:   shr    $0x16,%r11
  0x000000011b9ba446:   test   %r11,%r11
  0x000000011b9ba449:   je     0x000000011b9ba32c
  0x000000011b9ba44f:   shr    $0x9,%r10
  0x000000011b9ba453:   movabs $0x120ec5000,%r8
  0x000000011b9ba45d:   add    %r10,%r8
  0x000000011b9ba460:   cmpb   $0x2,(%r8)
  0x000000011b9ba464:   je     0x000000011b9ba32c
  0x000000011b9ba46a:   mov    0x48(%r15),%r10
  0x000000011b9ba46e:   mov    0x58(%r15),%r11
  0x000000011b9ba472:   lock addl $0x0,-0x40(%rsp)
  0x000000011b9ba478:   nopl   0x0(%rax,%rax,1)
  0x000000011b9ba480:   cmpb   $0x0,(%r8)
  0x000000011b9ba484:   je     0x000000011b9ba32c
  0x000000011b9ba48a:   mov    %r12b,(%r8)
  0x000000011b9ba48d:   test   %r10,%r10
  0x000000011b9ba490:   jne    0x000000011b9ba4b2
  0x000000011b9ba492:   mov    %r8,%rdi
  0x000000011b9ba495:   mov    %r15,%rsi
  0x000000011b9ba498:   movabs $0x10ad83e90,%r10
  0x000000011b9ba4a2:   call   *%r10
  0x000000011b9ba4a5:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba4ad:   jmp    0x000000011b9ba32c
  0x000000011b9ba4b2:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011b9ba4b7:   add    $0xfffffffffffffff8,%r10
  0x000000011b9ba4bb:   mov    %r10,0x48(%r15)
  0x000000011b9ba4bf:   nop
  0x000000011b9ba4c0:   jmp    0x000000011b9ba32c
  0x000000011b9ba4c5:   movabs $0x12f059970,%rax            ;   {metadata('java/util/List')}
  0x000000011b9ba4cf:   movabs $0x12f000000,%rsi
  0x000000011b9ba4d9:   add    %r8,%rsi
  0x000000011b9ba4dc:   mov    0x20(%rsi),%r11
  0x000000011b9ba4e0:   cmp    %rax,%r11
  0x000000011b9ba4e3:   jne    0x000000011b9ba637
  0x000000011b9ba4e9:   cmp    $0x1d2a58,%r8d               ;   {metadata('java/util/Collections$EmptyList')}
  0x000000011b9ba4f0:   jne    0x000000011b9ba905
  0x000000011b9ba4f6:   test   %rdx,%rdx
  0x000000011b9ba4f9:   je     0x000000011b9ba8a5
  0x000000011b9ba4ff:   nop
  0x000000011b9ba500:   cmpb   $0x0,0x40(%r15)
  0x000000011b9ba505:   jne    0x000000011b9ba79c
  0x000000011b9ba50b:   movl   $0xc3f66303,0xc(%rbx)        ;   {oop(a 'java/lang/annotation/ElementType'{0x000000061fb31818})}
  0x000000011b9ba512:   mov    %rbx,%r10
  0x000000011b9ba515:   movabs $0x61fb31818,%r11            ;   {oop(a 'java/lang/annotation/ElementType'{0x000000061fb31818})}
  0x000000011b9ba51f:   xor    %r10,%r11
  0x000000011b9ba522:   shr    $0x16,%r11
  0x000000011b9ba526:   test   %r11,%r11
  0x000000011b9ba529:   je     0x000000011b9ba32c
  0x000000011b9ba52f:   shr    $0x9,%r10
  0x000000011b9ba533:   movabs $0x120ec5000,%r8
  0x000000011b9ba53d:   add    %r10,%r8
  0x000000011b9ba540:   cmpb   $0x2,(%r8)
  0x000000011b9ba544:   je     0x000000011b9ba32c
  0x000000011b9ba54a:   mov    0x48(%r15),%r10
  0x000000011b9ba54e:   mov    0x58(%r15),%r11
  0x000000011b9ba552:   lock addl $0x0,-0x40(%rsp)
  0x000000011b9ba558:   nopl   0x0(%rax,%rax,1)
  0x000000011b9ba560:   cmpb   $0x0,(%r8)
  0x000000011b9ba564:   je     0x000000011b9ba32c
  0x000000011b9ba56a:   mov    %r12b,(%r8)
  0x000000011b9ba56d:   test   %r10,%r10
  0x000000011b9ba570:   jne    0x000000011b9ba592
  0x000000011b9ba572:   mov    %r8,%rdi
  0x000000011b9ba575:   mov    %r15,%rsi
  0x000000011b9ba578:   movabs $0x10ad83e90,%r10
  0x000000011b9ba582:   call   *%r10
  0x000000011b9ba585:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba58d:   jmp    0x000000011b9ba32c
  0x000000011b9ba592:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011b9ba597:   add    $0xfffffffffffffff8,%r10
  0x000000011b9ba59b:   mov    %r10,0x48(%r15)
  0x000000011b9ba59f:   nop
  0x000000011b9ba5a0:   jmp    0x000000011b9ba32c
  0x000000011b9ba5a5:   mov    0xc(%rsi),%r11d
  0x000000011b9ba5a9:   test   %r11d,%r11d
  0x000000011b9ba5ac:   je     0x000000011b9ba2f1
  0x000000011b9ba5b2:   mov    0x28(%r15),%r10
  0x000000011b9ba5b6:   mov    %r11,%rdi
  0x000000011b9ba5b9:   shl    $0x3,%rdi
  0x000000011b9ba5bd:   data16 xchg %ax,%ax
  0x000000011b9ba5c0:   test   %r10,%r10
  0x000000011b9ba5c3:   je     0x000000011b9ba7e8
  0x000000011b9ba5c9:   mov    0x38(%r15),%r11
  0x000000011b9ba5cd:   mov    %rdi,-0x8(%r11,%r10,1)
  0x000000011b9ba5d2:   add    $0xfffffffffffffff8,%r10
  0x000000011b9ba5d6:   mov    %r10,0x28(%r15)
  0x000000011b9ba5da:   jmp    0x000000011b9ba2f1
  0x000000011b9ba5df:   mov    0x48(%r15),%r10
  0x000000011b9ba5e3:   mov    0x58(%r15),%r11
  0x000000011b9ba5e7:   lock addl $0x0,-0x40(%rsp)
  0x000000011b9ba5ed:   cmpb   $0x0,(%r8)
  0x000000011b9ba5f1:   je     0x000000011b9ba32c
  0x000000011b9ba5f7:   mov    %r12b,(%r8)
  0x000000011b9ba5fa:   nopw   0x0(%rax,%rax,1)
  0x000000011b9ba600:   test   %r10,%r10
  0x000000011b9ba603:   jne    0x000000011b9ba625
  0x000000011b9ba605:   mov    %r8,%rdi
  0x000000011b9ba608:   mov    %r15,%rsi
  0x000000011b9ba60b:   movabs $0x10ad83e90,%r10
  0x000000011b9ba615:   call   *%r10
  0x000000011b9ba618:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba620:   jmp    0x000000011b9ba32c
  0x000000011b9ba625:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011b9ba62a:   add    $0xfffffffffffffff8,%r10
  0x000000011b9ba62e:   mov    %r10,0x48(%r15)
  0x000000011b9ba632:   jmp    0x000000011b9ba32c
  0x000000011b9ba637:   mov    0x28(%rsi),%rdi
  0x000000011b9ba63b:   mov    (%rdi),%ecx
  0x000000011b9ba63d:   add    $0x8,%rdi
  0x000000011b9ba641:   test   %rax,%rax
  0x000000011b9ba644:   repnz scas %es:(%rdi),%rax
  0x000000011b9ba647:   jne    0x000000011b9ba651
  0x000000011b9ba64d:   mov    %rax,0x20(%rsi)
  0x000000011b9ba651:   je     0x000000011b9ba4e9
  0x000000011b9ba657:   nopw   0x0(%rax,%rax,1)
  0x000000011b9ba660:   cmp    $0x1079300,%r8d              ;   {metadata('java/lang/annotation/ElementType')}
  0x000000011b9ba667:   jne    0x000000011b9ba924
  0x000000011b9ba66d:   test   %rdx,%rdx
  0x000000011b9ba670:   je     0x000000011b9ba8d5
  0x000000011b9ba676:   data16 nopw 0x0(%rax,%rax,1)
  0x000000011b9ba680:   cmpb   $0x0,0x40(%r15)
  0x000000011b9ba685:   jne    0x000000011b9ba818
  0x000000011b9ba68b:   movl   $0xc3f81c59,0xc(%rbx)        ;   {oop(a 'java/lang/Boolean'{0x000000061fc0e2c8} = true)}
  0x000000011b9ba692:   mov    %rbx,%r10
  0x000000011b9ba695:   movabs $0x61fc0e2c8,%r11            ;   {oop(a 'java/lang/Boolean'{0x000000061fc0e2c8} = true)}
  0x000000011b9ba69f:   xor    %r10,%r11
  0x000000011b9ba6a2:   shr    $0x16,%r11
  0x000000011b9ba6a6:   test   %r11,%r11
  0x000000011b9ba6a9:   je     0x000000011b9ba32c
  0x000000011b9ba6af:   shr    $0x9,%r10
  0x000000011b9ba6b3:   movabs $0x120ec5000,%r8
  0x000000011b9ba6bd:   add    %r10,%r8
  0x000000011b9ba6c0:   cmpb   $0x2,(%r8)
  0x000000011b9ba6c4:   je     0x000000011b9ba32c
  0x000000011b9ba6ca:   mov    0x48(%r15),%r10
  0x000000011b9ba6ce:   mov    0x58(%r15),%r11
  0x000000011b9ba6d2:   lock addl $0x0,-0x40(%rsp)
  0x000000011b9ba6d8:   nopl   0x0(%rax,%rax,1)
  0x000000011b9ba6e0:   cmpb   $0x0,(%r8)
  0x000000011b9ba6e4:   je     0x000000011b9ba32c
  0x000000011b9ba6ea:   mov    %r12b,(%r8)
  0x000000011b9ba6ed:   test   %r10,%r10
  0x000000011b9ba6f0:   jne    0x000000011b9ba712
  0x000000011b9ba6f2:   mov    %r8,%rdi
  0x000000011b9ba6f5:   mov    %r15,%rsi
  0x000000011b9ba6f8:   movabs $0x10ad83e90,%r10
  0x000000011b9ba702:   call   *%r10
  0x000000011b9ba705:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba70d:   jmp    0x000000011b9ba32c
  0x000000011b9ba712:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011b9ba717:   add    $0xfffffffffffffff8,%r10
  0x000000011b9ba71b:   mov    %r10,0x48(%r15)
  0x000000011b9ba71f:   nop
  0x000000011b9ba720:   jmp    0x000000011b9ba32c
  0x000000011b9ba725:   mov    0xc(%rsi),%r10d
  0x000000011b9ba729:   test   %r10d,%r10d
  0x000000011b9ba72c:   je     0x000000011b9ba36b
  0x000000011b9ba732:   mov    0x28(%r15),%r11
  0x000000011b9ba736:   mov    %r10,%rdi
  0x000000011b9ba739:   shl    $0x3,%rdi
  0x000000011b9ba73d:   data16 xchg %ax,%ax
  0x000000011b9ba740:   test   %r11,%r11
  0x000000011b9ba743:   je     0x000000011b9ba853
  0x000000011b9ba749:   mov    0x38(%r15),%r10
  0x000000011b9ba74d:   mov    %rdi,-0x8(%r10,%r11,1)
  0x000000011b9ba752:   add    $0xfffffffffffffff8,%r11
  0x000000011b9ba756:   mov    %r11,0x28(%r15)
  0x000000011b9ba75a:   jmp    0x000000011b9ba36b
  0x000000011b9ba75f:   mov    0xc(%rsi),%r11d
  0x000000011b9ba763:   test   %r11d,%r11d
  0x000000011b9ba766:   je     0x000000011b9ba42b
  0x000000011b9ba76c:   mov    0x28(%r15),%r10
  0x000000011b9ba770:   mov    %r11,%rdi
  0x000000011b9ba773:   shl    $0x3,%rdi
  0x000000011b9ba777:   test   %r10,%r10
  0x000000011b9ba77a:   nopw   0x0(%rax,%rax,1)
  0x000000011b9ba780:   je     0x000000011b9ba884
  0x000000011b9ba786:   mov    0x38(%r15),%r11
  0x000000011b9ba78a:   mov    %rdi,-0x8(%r11,%r10,1)
  0x000000011b9ba78f:   add    $0xfffffffffffffff8,%r10
  0x000000011b9ba793:   mov    %r10,0x28(%r15)
  0x000000011b9ba797:   jmp    0x000000011b9ba42b
  0x000000011b9ba79c:   mov    0xc(%rbx),%r10d
  0x000000011b9ba7a0:   test   %r10d,%r10d
  0x000000011b9ba7a3:   je     0x000000011b9ba50b
  0x000000011b9ba7a9:   mov    0x28(%r15),%r11
  0x000000011b9ba7ad:   mov    %r10,%rdi
  0x000000011b9ba7b0:   shl    $0x3,%rdi
  0x000000011b9ba7b4:   test   %r11,%r11
  0x000000011b9ba7b7:   je     0x000000011b9ba8b8
  0x000000011b9ba7bd:   mov    0x38(%r15),%r10
  0x000000011b9ba7c1:   mov    %rdi,-0x8(%r10,%r11,1)
  0x000000011b9ba7c6:   add    $0xfffffffffffffff8,%r11
  0x000000011b9ba7ca:   mov    %r11,0x28(%r15)
  0x000000011b9ba7ce:   jmp    0x000000011b9ba50b
  0x000000011b9ba7d3:   mov    $0xfffffff6,%esi
  0x000000011b9ba7d8:   data16 xchg %ax,%ax
  0x000000011b9ba7db:   call   0x000000011b44ff00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::ifElse@30 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011b9ba7e0:   nopl   0x750(%rax,%rax,1)           ;   {other}
  0x000000011b9ba7e8:   mov    %r15,%rsi
  0x000000011b9ba7eb:   movabs $0x10ad83e70,%r10
  0x000000011b9ba7f5:   call   *%r10
  0x000000011b9ba7f8:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba800:   jmp    0x000000011b9ba2f1
  0x000000011b9ba805:   mov    $0xfffffff6,%esi
  0x000000011b9ba80a:   nop
  0x000000011b9ba80b:   call   0x000000011b44ff00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::ifElse@66 (line 42)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011b9ba810:   nopl   0x1000780(%rax,%rax,1)       ;   {other}
  0x000000011b9ba818:   mov    0xc(%rbx),%r10d
  0x000000011b9ba81c:   nopl   0x0(%rax)
  0x000000011b9ba820:   test   %r10d,%r10d
  0x000000011b9ba823:   je     0x000000011b9ba68b
  0x000000011b9ba829:   mov    0x28(%r15),%r11
  0x000000011b9ba82d:   mov    %r10,%rdi
  0x000000011b9ba830:   shl    $0x3,%rdi
  0x000000011b9ba834:   test   %r11,%r11
  0x000000011b9ba837:   je     0x000000011b9ba8e8
  0x000000011b9ba83d:   mov    0x38(%r15),%r10
  0x000000011b9ba841:   mov    %rdi,-0x8(%r10,%r11,1)
  0x000000011b9ba846:   add    $0xfffffffffffffff8,%r11
  0x000000011b9ba84a:   mov    %r11,0x28(%r15)
  0x000000011b9ba84e:   jmp    0x000000011b9ba68b
  0x000000011b9ba853:   mov    %r15,%rsi
  0x000000011b9ba856:   movabs $0x10ad83e70,%r10
  0x000000011b9ba860:   call   *%r10
  0x000000011b9ba863:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba86b:   jmp    0x000000011b9ba36b
  0x000000011b9ba870:   mov    $0xfffffff6,%esi
  0x000000011b9ba875:   xchg   %ax,%ax
  0x000000011b9ba877:   call   0x000000011b44ff00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::ifElse@103 (line 45)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011b9ba87c:   nopl   0x20007ec(%rax,%rax,1)       ;   {other}
  0x000000011b9ba884:   mov    %r15,%rsi
  0x000000011b9ba887:   movabs $0x10ad83e70,%r10
  0x000000011b9ba891:   call   *%r10
  0x000000011b9ba894:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba89c:   nopl   0x0(%rax)
  0x000000011b9ba8a0:   jmp    0x000000011b9ba42b
  0x000000011b9ba8a5:   mov    $0xfffffff6,%esi
  0x000000011b9ba8aa:   nop
  0x000000011b9ba8ab:   call   0x000000011b44ff00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::ifElse@140 (line 48)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011b9ba8b0:   nopl   0x3000820(%rax,%rax,1)       ;   {other}
  0x000000011b9ba8b8:   mov    %r15,%rsi
  0x000000011b9ba8bb:   movabs $0x10ad83e70,%r10
  0x000000011b9ba8c5:   call   *%r10
  0x000000011b9ba8c8:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba8d0:   jmp    0x000000011b9ba50b
  0x000000011b9ba8d5:   mov    $0xfffffff6,%esi
  0x000000011b9ba8da:   nop
  0x000000011b9ba8db:   call   0x000000011b44ff00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::ifElse@175 (line 51)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011b9ba8e0:   nopl   0x4000850(%rax,%rax,1)       ;   {other}
  0x000000011b9ba8e8:   mov    %r15,%rsi
  0x000000011b9ba8eb:   movabs $0x10ad83e70,%r10
  0x000000011b9ba8f5:   call   *%r10
  0x000000011b9ba8f8:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011b9ba900:   jmp    0x000000011b9ba68b
  0x000000011b9ba905:   mov    $0xffffffde,%esi
  0x000000011b9ba90a:   mov    %rbx,%rbp
  0x000000011b9ba90d:   mov    %rdx,(%rsp)
  0x000000011b9ba911:   mov    %r10d,0x8(%rsp)
  0x000000011b9ba916:   nop
  0x000000011b9ba917:   call   0x000000011b44ff00           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=NarrowOop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::ifElse@132 (line 47)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011b9ba91c:   nopl   0x500088c(%rax,%rax,1)       ;   {other}
  0x000000011b9ba924:   mov    $0xffffffde,%esi
  0x000000011b9ba929:   mov    %rbx,%rbp
  0x000000011b9ba92c:   mov    %rdx,(%rsp)
  0x000000011b9ba930:   mov    %r10d,0xc(%rsp)
  0x000000011b9ba935:   xchg   %ax,%ax
  0x000000011b9ba937:   call   0x000000011b44ff00           ; ImmutableOopMap {rbp=Oop [0]=Oop [12]=NarrowOop }
                                                            ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::ifElse@161 (line 50)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011b9ba93c:   nopl   0x60008ac(%rax,%rax,1)       ;   {other}
  0x000000011b9ba944:   mov    $0xffffff45,%esi
  0x000000011b9ba949:   mov    %rbx,%rbp
  0x000000011b9ba94c:   mov    %rdx,(%rsp)
  0x000000011b9ba950:   mov    %r10d,0xc(%rsp)
  0x000000011b9ba955:   xchg   %ax,%ax
  0x000000011b9ba957:   call   0x000000011b44ff00           ; ImmutableOopMap {rbp=Oop [0]=Oop [12]=NarrowOop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Objects::requireNonNull@1 (line 232)
                                                            ; - dev.jgardo.ClassBenchmark::ifElse@4 (line 37)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011b9ba95c:   nopl   0x70008cc(%rax,%rax,1)       ;   {other}
  0x000000011b9ba964:   movabs $0x11b9ba331,%r10            ;   {internal_word}
  0x000000011b9ba96e:   mov    %r10,0x468(%r15)
  0x000000011b9ba975:   jmp    0x000000011b451000           ;   {runtime_call SafepointBlob}
  0x000000011b9ba97a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (final stubs)}
  0x000000011b9ba97f:   jmp    0x000000011b9ba2ba
  0x000000011b9ba984:   hlt    
  0x000000011b9ba985:   hlt    
  0x000000011b9ba986:   hlt    
  0x000000011b9ba987:   hlt    
[Exception Handler]
  0x000000011b9ba988:   jmp    0x000000011b512780           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011b9ba98d:   call   0x000000011b9ba992
  0x000000011b9ba992:   subq   $0x5,(%rsp)
  0x000000011b9ba997:   jmp    0x000000011b4502a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b9ba99c:   hlt    
  0x000000011b9ba99d:   hlt    
  0x000000011b9ba99e:   hlt    
  0x000000011b9ba99f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]