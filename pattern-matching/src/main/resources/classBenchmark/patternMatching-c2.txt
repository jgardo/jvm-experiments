============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)    2221  724       4       dev.jgardo.ClassBenchmark::patternMatching (182 bytes)
 total in heap  [0x000000011ba9dd10,0x000000011ba9eaa0] = 3472
 relocation     [0x000000011ba9de68,0x000000011ba9df08] = 160
 main code      [0x000000011ba9df20,0x000000011ba9e738] = 2072
 stub code      [0x000000011ba9e738,0x000000011ba9e750] = 24
 oops           [0x000000011ba9e750,0x000000011ba9e7c8] = 120
 metadata       [0x000000011ba9e7c8,0x000000011ba9e838] = 112
 scopes data    [0x000000011ba9e838,0x000000011ba9e9a8] = 368
 scopes pcs     [0x000000011ba9e9a8,0x000000011ba9ea88] = 224
 dependencies   [0x000000011ba9ea88,0x000000011ba9ea90] = 8
 nul chk table  [0x000000011ba9ea90,0x000000011ba9eaa0] = 16

[Disassembly]
--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000017047f028} 'patternMatching' '(Lorg/openjdk/jmh/infra/Blackhole;)V' in 'dev/jgardo/ClassBenchmark'
  # this:     rsi:rsi   = 'dev/jgardo/ClassBenchmark'
  # parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
  #           [sp+0x40]  (sp of caller)
  0x000000011ba9df20:   mov    0x8(%rsi),%r10d
  0x000000011ba9df24:   movabs $0x12f000000,%r11
  0x000000011ba9df2e:   add    %r11,%r10
  0x000000011ba9df31:   cmp    %r10,%rax
  0x000000011ba9df34:   jne    0x000000011b51d080           ;   {runtime_call ic_miss_stub}
  0x000000011ba9df3a:   xchg   %ax,%ax
  0x000000011ba9df3c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x000000011ba9df40:   mov    %eax,-0x14000(%rsp)
  0x000000011ba9df47:   push   %rbp
  0x000000011ba9df48:   sub    $0x30,%rsp
  0x000000011ba9df4c:   cmpl   $0x1,0x20(%r15)
  0x000000011ba9df54:   jne    0x000000011ba9e72a
  0x000000011ba9df5a:   mov    %rsi,%rbx
  0x000000011ba9df5d:   mov    0xc(%rsi),%r11d
  0x000000011ba9df61:   mov    0x8(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x000000011ba9e6f0
  0x000000011ba9df66:   cmp    $0x61b8,%r10d                ;   {metadata('java/lang/Boolean')}
  0x000000011ba9df6d:   jne    0x000000011ba9e318
  0x000000011ba9df73:   xor    %r8d,%r8d
  0x000000011ba9df76:   lea    (%r12,%r11,8),%rbp
  0x000000011ba9df7a:   nopw   0x0(%rax,%rax,1)
  0x000000011ba9df80:   cmp    $0x2,%r8d
  0x000000011ba9df84:   jne    0x000000011ba9e045
  0x000000011ba9df8a:   cmp    $0x25c88,%r10d               ;   {metadata('java/lang/Integer')}
  0x000000011ba9df91:   jne    0x000000011ba9e650
  0x000000011ba9df97:   test   %rdx,%rdx
  0x000000011ba9df9a:   nopw   0x0(%rax,%rax,1)
  0x000000011ba9dfa0:   je     0x000000011ba9e564
  0x000000011ba9dfa6:   cmpb   $0x0,0x40(%r15)
  0x000000011ba9dfab:   jne    0x000000011ba9e44e
  0x000000011ba9dfb1:   movl   $0xc3f81af9,0xc(%rbx)        ;   {oop(a 'java/util/Collections$EmptyList'{0x000000061fc0d7c8})}
  0x000000011ba9dfb8:   mov    %rbx,%r10
  0x000000011ba9dfbb:   movabs $0x61fc0d7c8,%r11            ;   {oop(a 'java/util/Collections$EmptyList'{0x000000061fc0d7c8})}
  0x000000011ba9dfc5:   xor    %r10,%r11
  0x000000011ba9dfc8:   shr    $0x16,%r11
  0x000000011ba9dfcc:   test   %r11,%r11
  0x000000011ba9dfcf:   je     0x000000011ba9e24f
  0x000000011ba9dfd5:   shr    $0x9,%r10
  0x000000011ba9dfd9:   movabs $0x120f98000,%r8
  0x000000011ba9dfe3:   add    %r10,%r8
  0x000000011ba9dfe6:   cmpb   $0x2,(%r8)
  0x000000011ba9dfea:   je     0x000000011ba9e24f
  0x000000011ba9dff0:   mov    0x48(%r15),%r10
  0x000000011ba9dff4:   mov    0x58(%r15),%r11
  0x000000011ba9dff8:   lock addl $0x0,-0x40(%rsp)
  0x000000011ba9dffe:   xchg   %ax,%ax
  0x000000011ba9e000:   cmpb   $0x0,(%r8)
  0x000000011ba9e004:   je     0x000000011ba9e24f
  0x000000011ba9e00a:   mov    %r12b,(%r8)
  0x000000011ba9e00d:   test   %r10,%r10
  0x000000011ba9e010:   jne    0x000000011ba9e032
  0x000000011ba9e012:   mov    %r8,%rdi
  0x000000011ba9e015:   mov    %r15,%rsi
  0x000000011ba9e018:   movabs $0x10ae56e90,%r10
  0x000000011ba9e022:   call   *%r10
  0x000000011ba9e025:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e02d:   jmp    0x000000011ba9e24f
  0x000000011ba9e032:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011ba9e037:   add    $0xfffffffffffffff8,%r10
  0x000000011ba9e03b:   mov    %r10,0x48(%r15)
  0x000000011ba9e03f:   nop
  0x000000011ba9e040:   jmp    0x000000011ba9e24f
  0x000000011ba9e045:   cmp    $0x2,%r8d
  0x000000011ba9e049:   jge    0x000000011ba9e1e5
  0x000000011ba9e04f:   cmp    $0x1,%r8d
  0x000000011ba9e053:   je     0x000000011ba9e125
  0x000000011ba9e059:   nopl   0x0(%rax)
  0x000000011ba9e060:   cmp    $0x61b8,%r10d                ;   {metadata('java/lang/Boolean')}
  0x000000011ba9e067:   jne    0x000000011ba9e6b0
  0x000000011ba9e06d:   test   %rdx,%rdx
  0x000000011ba9e070:   je     0x000000011ba9e58c
  0x000000011ba9e076:   data16 nopw 0x0(%rax,%rax,1)
  0x000000011ba9e080:   cmpb   $0x0,0x40(%r15)
  0x000000011ba9e085:   jne    0x000000011ba9e4ff
  0x000000011ba9e08b:   movl   $0xfff89fd4,0xc(%rbx)        ;   {oop("true"{0x00000007ffc4fea0})}
  0x000000011ba9e092:   mov    %rbx,%r10
  0x000000011ba9e095:   movabs $0x7ffc4fea0,%r11            ;   {oop("true"{0x00000007ffc4fea0})}
  0x000000011ba9e09f:   xor    %r10,%r11
  0x000000011ba9e0a2:   shr    $0x16,%r11
  0x000000011ba9e0a6:   test   %r11,%r11
  0x000000011ba9e0a9:   je     0x000000011ba9e24f
  0x000000011ba9e0af:   shr    $0x9,%r10
  0x000000011ba9e0b3:   movabs $0x120f98000,%r8
  0x000000011ba9e0bd:   add    %r10,%r8
  0x000000011ba9e0c0:   cmpb   $0x2,(%r8)
  0x000000011ba9e0c4:   je     0x000000011ba9e24f
  0x000000011ba9e0ca:   mov    0x48(%r15),%r10
  0x000000011ba9e0ce:   mov    0x58(%r15),%r11
  0x000000011ba9e0d2:   lock addl $0x0,-0x40(%rsp)
  0x000000011ba9e0d8:   nopl   0x0(%rax,%rax,1)
  0x000000011ba9e0e0:   cmpb   $0x0,(%r8)
  0x000000011ba9e0e4:   je     0x000000011ba9e24f
  0x000000011ba9e0ea:   mov    %r12b,(%r8)
  0x000000011ba9e0ed:   test   %r10,%r10
  0x000000011ba9e0f0:   jne    0x000000011ba9e112
  0x000000011ba9e0f2:   mov    %r8,%rdi
  0x000000011ba9e0f5:   mov    %r15,%rsi
  0x000000011ba9e0f8:   movabs $0x10ae56e90,%r10
  0x000000011ba9e102:   call   *%r10
  0x000000011ba9e105:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e10d:   jmp    0x000000011ba9e24f
  0x000000011ba9e112:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011ba9e117:   add    $0xfffffffffffffff8,%r10
  0x000000011ba9e11b:   mov    %r10,0x48(%r15)
  0x000000011ba9e11f:   nop
  0x000000011ba9e120:   jmp    0x000000011ba9e24f
  0x000000011ba9e125:   cmp    $0xe8d8,%r10d                ;   {metadata('java/lang/String')}
  0x000000011ba9e12c:   jne    0x000000011ba9e670
  0x000000011ba9e132:   test   %rdx,%rdx
  0x000000011ba9e135:   je     0x000000011ba9e578
  0x000000011ba9e13b:   nopl   0x0(%rax,%rax,1)
  0x000000011ba9e140:   cmpb   $0x0,0x40(%r15)
  0x000000011ba9e145:   jne    0x000000011ba9e4c8
  0x000000011ba9e14b:   movl   $0xfff98261,0xc(%rbx)        ;   {oop(a 'java/lang/Integer'{0x00000007ffcc1308} = 4)}
  0x000000011ba9e152:   mov    %rbx,%r10
  0x000000011ba9e155:   movabs $0x7ffcc1308,%r11            ;   {oop(a 'java/lang/Integer'{0x00000007ffcc1308} = 4)}
  0x000000011ba9e15f:   xor    %r10,%r11
  0x000000011ba9e162:   shr    $0x16,%r11
  0x000000011ba9e166:   test   %r11,%r11
  0x000000011ba9e169:   je     0x000000011ba9e24f
  0x000000011ba9e16f:   shr    $0x9,%r10
  0x000000011ba9e173:   movabs $0x120f98000,%r8
  0x000000011ba9e17d:   add    %r10,%r8
  0x000000011ba9e180:   cmpb   $0x2,(%r8)
  0x000000011ba9e184:   je     0x000000011ba9e24f
  0x000000011ba9e18a:   mov    0x48(%r15),%r10
  0x000000011ba9e18e:   mov    0x58(%r15),%r11
  0x000000011ba9e192:   lock addl $0x0,-0x40(%rsp)
  0x000000011ba9e198:   nopl   0x0(%rax,%rax,1)
  0x000000011ba9e1a0:   cmpb   $0x0,(%r8)
  0x000000011ba9e1a4:   je     0x000000011ba9e24f
  0x000000011ba9e1aa:   mov    %r12b,(%r8)
  0x000000011ba9e1ad:   test   %r10,%r10
  0x000000011ba9e1b0:   jne    0x000000011ba9e1d2
  0x000000011ba9e1b2:   mov    %r8,%rdi
  0x000000011ba9e1b5:   mov    %r15,%rsi
  0x000000011ba9e1b8:   movabs $0x10ae56e90,%r10
  0x000000011ba9e1c2:   call   *%r10
  0x000000011ba9e1c5:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e1cd:   jmp    0x000000011ba9e24f
  0x000000011ba9e1d2:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011ba9e1d7:   add    $0xfffffffffffffff8,%r10
  0x000000011ba9e1db:   mov    %r10,0x48(%r15)
  0x000000011ba9e1df:   nop
  0x000000011ba9e1e0:   jmp    0x000000011ba9e24f
  0x000000011ba9e1e5:   cmp    $0x3,%r8d
  0x000000011ba9e1e9:   jne    0x000000011ba9e262
  0x000000011ba9e1ef:   cmp    $0x1d2a58,%r10d              ;   {metadata('java/util/Collections$EmptyList')}
  0x000000011ba9e1f6:   jne    0x000000011ba9e690
  0x000000011ba9e1fc:   nopl   0x0(%rax)
  0x000000011ba9e200:   test   %rdx,%rdx
  0x000000011ba9e203:   je     0x000000011ba9e53c
  0x000000011ba9e209:   cmpb   $0x0,0x40(%r15)
  0x000000011ba9e20e:   jne    0x000000011ba9e3bf
  0x000000011ba9e214:   movl   $0xc3f66293,0xc(%rbx)        ;   {oop(a 'java/lang/annotation/ElementType'{0x000000061fb31498})}
  0x000000011ba9e21b:   mov    %rbx,%r10
  0x000000011ba9e21e:   movabs $0x61fb31498,%r11            ;   {oop(a 'java/lang/annotation/ElementType'{0x000000061fb31498})}
  0x000000011ba9e228:   xor    %r10,%r11
  0x000000011ba9e22b:   shr    $0x16,%r11
  0x000000011ba9e22f:   test   %r11,%r11
  0x000000011ba9e232:   je     0x000000011ba9e24f
  0x000000011ba9e234:   shr    $0x9,%r10
  0x000000011ba9e238:   movabs $0x120f98000,%r8
  0x000000011ba9e242:   add    %r10,%r8
  0x000000011ba9e245:   cmpb   $0x2,(%r8)
  0x000000011ba9e249:   jne    0x000000011ba9e3fc
  0x000000011ba9e24f:   add    $0x30,%rsp
  0x000000011ba9e253:   pop    %rbp
  0x000000011ba9e254:   cmp    0x450(%r15),%rsp             ;   {poll_return}
  0x000000011ba9e25b:   ja     0x000000011ba9e714
  0x000000011ba9e261:   ret    
  0x000000011ba9e262:   cmp    $0x1079300,%r10d             ;   {metadata('java/lang/annotation/ElementType')}
  0x000000011ba9e269:   jne    0x000000011ba9e6d0
  0x000000011ba9e26f:   test   %rdx,%rdx
  0x000000011ba9e272:   je     0x000000011ba9e550
  0x000000011ba9e278:   nopl   0x0(%rax,%rax,1)
  0x000000011ba9e280:   cmpb   $0x0,0x40(%r15)
  0x000000011ba9e285:   jne    0x000000011ba9e385
  0x000000011ba9e28b:   movl   $0xc3f81c59,0xc(%rbx)        ;   {oop(a 'java/lang/Boolean'{0x000000061fc0e2c8} = true)}
  0x000000011ba9e292:   mov    %rbx,%r10
  0x000000011ba9e295:   movabs $0x61fc0e2c8,%r11            ;   {oop(a 'java/lang/Boolean'{0x000000061fc0e2c8} = true)}
  0x000000011ba9e29f:   xor    %r10,%r11
  0x000000011ba9e2a2:   shr    $0x16,%r11
  0x000000011ba9e2a6:   test   %r11,%r11
  0x000000011ba9e2a9:   je     0x000000011ba9e24f
  0x000000011ba9e2ab:   shr    $0x9,%r10
  0x000000011ba9e2af:   movabs $0x120f98000,%r8
  0x000000011ba9e2b9:   add    %r10,%r8
  0x000000011ba9e2bc:   nopl   0x0(%rax)
  0x000000011ba9e2c0:   cmpb   $0x2,(%r8)
  0x000000011ba9e2c4:   je     0x000000011ba9e24f
  0x000000011ba9e2c6:   mov    0x48(%r15),%r10
  0x000000011ba9e2ca:   mov    0x58(%r15),%r11
  0x000000011ba9e2ce:   lock addl $0x0,-0x40(%rsp)
  0x000000011ba9e2d4:   cmpb   $0x0,(%r8)
  0x000000011ba9e2d8:   je     0x000000011ba9e24f
  0x000000011ba9e2de:   mov    %r12b,(%r8)
  0x000000011ba9e2e1:   test   %r10,%r10
  0x000000011ba9e2e4:   jne    0x000000011ba9e306
  0x000000011ba9e2e6:   mov    %r8,%rdi
  0x000000011ba9e2e9:   mov    %r15,%rsi
  0x000000011ba9e2ec:   movabs $0x10ae56e90,%r10
  0x000000011ba9e2f6:   call   *%r10
  0x000000011ba9e2f9:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e301:   jmp    0x000000011ba9e24f
  0x000000011ba9e306:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011ba9e30b:   add    $0xfffffffffffffff8,%r10
  0x000000011ba9e30f:   mov    %r10,0x48(%r15)
  0x000000011ba9e313:   jmp    0x000000011ba9e24f
  0x000000011ba9e318:   nopl   0x0(%rax,%rax,1)
  0x000000011ba9e320:   cmp    $0xe8d8,%r10d                ;   {metadata('java/lang/String')}
  0x000000011ba9e327:   jne    0x000000011ba9e334
  0x000000011ba9e329:   mov    $0x1,%r8d
  0x000000011ba9e32f:   jmp    0x000000011ba9df76
  0x000000011ba9e334:   nopl   0x0(%rax,%rax,1)
  0x000000011ba9e33c:   data16 data16 xchg %ax,%ax
  0x000000011ba9e340:   cmp    $0x25c88,%r10d               ;   {metadata('java/lang/Integer')}
  0x000000011ba9e347:   jne    0x000000011ba9e354
  0x000000011ba9e349:   mov    $0x2,%r8d
  0x000000011ba9e34f:   jmp    0x000000011ba9df76
  0x000000011ba9e354:   movabs $0x12f059970,%rax            ;   {metadata('java/util/List')}
  0x000000011ba9e35e:   movabs $0x12f000000,%rsi
  0x000000011ba9e368:   add    %r10,%rsi
  0x000000011ba9e36b:   mov    0x20(%rsi),%r8
  0x000000011ba9e36f:   cmp    %rax,%r8
  0x000000011ba9e372:   jne    0x000000011ba9e485
  0x000000011ba9e378:   mov    $0x3,%r8d
  0x000000011ba9e37e:   xchg   %ax,%ax
  0x000000011ba9e380:   jmp    0x000000011ba9df76
  0x000000011ba9e385:   mov    0xc(%rbx),%r11d
  0x000000011ba9e389:   test   %r11d,%r11d
  0x000000011ba9e38c:   je     0x000000011ba9e28b
  0x000000011ba9e392:   mov    0x28(%r15),%r10
  0x000000011ba9e396:   mov    %r11,%rdi
  0x000000011ba9e399:   shl    $0x3,%rdi
  0x000000011ba9e39d:   data16 xchg %ax,%ax
  0x000000011ba9e3a0:   test   %r10,%r10
  0x000000011ba9e3a3:   je     0x000000011ba9e5a0
  0x000000011ba9e3a9:   mov    0x38(%r15),%r11
  0x000000011ba9e3ad:   mov    %rdi,-0x8(%r11,%r10,1)
  0x000000011ba9e3b2:   add    $0xfffffffffffffff8,%r10
  0x000000011ba9e3b6:   mov    %r10,0x28(%r15)
  0x000000011ba9e3ba:   jmp    0x000000011ba9e28b
  0x000000011ba9e3bf:   mov    0xc(%rbx),%r11d
  0x000000011ba9e3c3:   test   %r11d,%r11d
  0x000000011ba9e3c6:   je     0x000000011ba9e214
  0x000000011ba9e3cc:   mov    0x28(%r15),%r10
  0x000000011ba9e3d0:   mov    %r11,%rdi
  0x000000011ba9e3d3:   shl    $0x3,%rdi
  0x000000011ba9e3d7:   test   %r10,%r10
  0x000000011ba9e3da:   nopw   0x0(%rax,%rax,1)
  0x000000011ba9e3e0:   je     0x000000011ba9e5bd
  0x000000011ba9e3e6:   mov    0x38(%r15),%r11
  0x000000011ba9e3ea:   mov    %rdi,-0x8(%r11,%r10,1)
  0x000000011ba9e3ef:   add    $0xfffffffffffffff8,%r10
  0x000000011ba9e3f3:   mov    %r10,0x28(%r15)
  0x000000011ba9e3f7:   jmp    0x000000011ba9e214
  0x000000011ba9e3fc:   mov    0x48(%r15),%r10
  0x000000011ba9e400:   mov    0x58(%r15),%r11
  0x000000011ba9e404:   lock addl $0x0,-0x40(%rsp)
  0x000000011ba9e40a:   cmpb   $0x0,(%r8)
  0x000000011ba9e40e:   je     0x000000011ba9e24f
  0x000000011ba9e414:   mov    %r12b,(%r8)
  0x000000011ba9e417:   test   %r10,%r10
  0x000000011ba9e41a:   jne    0x000000011ba9e43c
  0x000000011ba9e41c:   mov    %r8,%rdi
  0x000000011ba9e41f:   mov    %r15,%rsi
  0x000000011ba9e422:   movabs $0x10ae56e90,%r10
  0x000000011ba9e42c:   call   *%r10
  0x000000011ba9e42f:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e437:   jmp    0x000000011ba9e24f
  0x000000011ba9e43c:   mov    %r8,-0x8(%r11,%r10,1)
  0x000000011ba9e441:   add    $0xfffffffffffffff8,%r10
  0x000000011ba9e445:   mov    %r10,0x48(%r15)
  0x000000011ba9e449:   jmp    0x000000011ba9e24f
  0x000000011ba9e44e:   mov    0xc(%rbx),%r10d
  0x000000011ba9e452:   test   %r10d,%r10d
  0x000000011ba9e455:   je     0x000000011ba9dfb1
  0x000000011ba9e45b:   mov    0x28(%r15),%r11
  0x000000011ba9e45f:   mov    %r10,%rdi
  0x000000011ba9e462:   shl    $0x3,%rdi
  0x000000011ba9e466:   test   %r11,%r11
  0x000000011ba9e469:   je     0x000000011ba9e5da
  0x000000011ba9e46f:   mov    0x38(%r15),%r10
  0x000000011ba9e473:   mov    %rdi,-0x8(%r10,%r11,1)
  0x000000011ba9e478:   add    $0xfffffffffffffff8,%r11
  0x000000011ba9e47c:   mov    %r11,0x28(%r15)
  0x000000011ba9e480:   jmp    0x000000011ba9dfb1
  0x000000011ba9e485:   mov    0x28(%rsi),%rdi
  0x000000011ba9e489:   mov    (%rdi),%ecx
  0x000000011ba9e48b:   add    $0x8,%rdi
  0x000000011ba9e48f:   test   %rax,%rax
  0x000000011ba9e492:   repnz scas %es:(%rdi),%rax
  0x000000011ba9e495:   jne    0x000000011ba9e49f
  0x000000011ba9e49b:   mov    %rax,0x20(%rsi)
  0x000000011ba9e49f:   nop
  0x000000011ba9e4a0:   je     0x000000011ba9e378
  0x000000011ba9e4a6:   mov    0x38(%rsi),%r8
  0x000000011ba9e4aa:   movabs $0x12f040118,%r9             ;   {metadata('java/lang/Enum')}
  0x000000011ba9e4b4:   cmp    %r9,%r8
  0x000000011ba9e4b7:   jne    0x000000011ba9e631
  0x000000011ba9e4bd:   mov    $0x4,%r8d
  0x000000011ba9e4c3:   jmp    0x000000011ba9df76
  0x000000011ba9e4c8:   mov    0xc(%rbx),%r10d
  0x000000011ba9e4cc:   test   %r10d,%r10d
  0x000000011ba9e4cf:   je     0x000000011ba9e14b
  0x000000011ba9e4d5:   mov    0x28(%r15),%r11
  0x000000011ba9e4d9:   mov    %r10,%rdi
  0x000000011ba9e4dc:   shl    $0x3,%rdi
  0x000000011ba9e4e0:   test   %r11,%r11
  0x000000011ba9e4e3:   je     0x000000011ba9e5f7
  0x000000011ba9e4e9:   mov    0x38(%r15),%r10
  0x000000011ba9e4ed:   mov    %rdi,-0x8(%r10,%r11,1)
  0x000000011ba9e4f2:   add    $0xfffffffffffffff8,%r11
  0x000000011ba9e4f6:   mov    %r11,0x28(%r15)
  0x000000011ba9e4fa:   jmp    0x000000011ba9e14b
  0x000000011ba9e4ff:   mov    0xc(%rbx),%r10d
  0x000000011ba9e503:   test   %r10d,%r10d
  0x000000011ba9e506:   je     0x000000011ba9e08b
  0x000000011ba9e50c:   mov    0x28(%r15),%r11
  0x000000011ba9e510:   mov    %r10,%rdi
  0x000000011ba9e513:   shl    $0x3,%rdi
  0x000000011ba9e517:   test   %r11,%r11
  0x000000011ba9e51a:   nopw   0x0(%rax,%rax,1)
  0x000000011ba9e520:   je     0x000000011ba9e614
  0x000000011ba9e526:   mov    0x38(%r15),%r10
  0x000000011ba9e52a:   mov    %rdi,-0x8(%r10,%r11,1)
  0x000000011ba9e52f:   add    $0xfffffffffffffff8,%r11
  0x000000011ba9e533:   mov    %r11,0x28(%r15)
  0x000000011ba9e537:   jmp    0x000000011ba9e08b
  0x000000011ba9e53c:   mov    $0xfffffff6,%esi
  0x000000011ba9e541:   xchg   %ax,%ax
  0x000000011ba9e543:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@126 (line 75)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e548:   nopl   0x838(%rax,%rax,1)           ;   {other}
  0x000000011ba9e550:   mov    $0xfffffff6,%esi
  0x000000011ba9e555:   xchg   %ax,%ax
  0x000000011ba9e557:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@148 (line 79)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e55c:   nopl   0x100084c(%rax,%rax,1)       ;   {other}
  0x000000011ba9e564:   mov    $0xfffffff6,%esi
  0x000000011ba9e569:   xchg   %ax,%ax
  0x000000011ba9e56b:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@104 (line 71)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e570:   nopl   0x2000860(%rax,%rax,1)       ;   {other}
  0x000000011ba9e578:   mov    $0xfffffff6,%esi
  0x000000011ba9e57d:   xchg   %ax,%ax
  0x000000011ba9e57f:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@82 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e584:   nopl   0x3000874(%rax,%rax,1)       ;   {other}
  0x000000011ba9e58c:   mov    $0xfffffff6,%esi
  0x000000011ba9e591:   xchg   %ax,%ax
  0x000000011ba9e593:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop }
                                                            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@61 (line 63)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e598:   nopl   0x4000888(%rax,%rax,1)       ;   {other}
  0x000000011ba9e5a0:   mov    %r15,%rsi
  0x000000011ba9e5a3:   movabs $0x10ae56e70,%r10
  0x000000011ba9e5ad:   call   *%r10
  0x000000011ba9e5b0:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e5b8:   jmp    0x000000011ba9e28b
  0x000000011ba9e5bd:   mov    %r15,%rsi
  0x000000011ba9e5c0:   movabs $0x10ae56e70,%r10
  0x000000011ba9e5ca:   call   *%r10
  0x000000011ba9e5cd:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e5d5:   jmp    0x000000011ba9e214
  0x000000011ba9e5da:   mov    %r15,%rsi
  0x000000011ba9e5dd:   movabs $0x10ae56e70,%r10
  0x000000011ba9e5e7:   call   *%r10
  0x000000011ba9e5ea:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e5f2:   jmp    0x000000011ba9dfb1
  0x000000011ba9e5f7:   mov    %r15,%rsi
  0x000000011ba9e5fa:   movabs $0x10ae56e70,%r10
  0x000000011ba9e604:   call   *%r10
  0x000000011ba9e607:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e60f:   jmp    0x000000011ba9e14b
  0x000000011ba9e614:   mov    %r15,%rsi
  0x000000011ba9e617:   movabs $0x10ae56e70,%r10
  0x000000011ba9e621:   call   *%r10
  0x000000011ba9e624:   nopl   0x0(%rax,%rax,1)             ;   {other}
  0x000000011ba9e62c:   jmp    0x000000011ba9e08b
  0x000000011ba9e631:   mov    $0xffffffcd,%esi
  0x000000011ba9e636:   mov    %rbx,%rbp
  0x000000011ba9e639:   mov    %rdx,(%rsp)
  0x000000011ba9e63d:   mov    %r11d,0xc(%rsp)
  0x000000011ba9e642:   nop
  0x000000011ba9e643:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop [0]=Oop [12]=NarrowOop }
                                                            ;*invokestatic profileBoolean {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.lang.invoke.LambdaForm$MH/0x000000013002a400::guard@46
                                                            ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@13
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000013002a400::guard@89
                                                            ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@13
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000013002a400::guard@89
                                                            ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@13
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000013002a400::guard@89
                                                            ; - java.lang.invoke.DelegatingMethodHandle$Holder::delegate@13
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000013002ac00::invoke@91
                                                            ; - java.lang.invoke.LambdaForm$MH/0x000000013002d800::tableSwitch@91
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000130031000::delegate@14
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000130030400::invoke@114
                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000130030c00::linkToTargetMethod@6
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@14 (line 61)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e648:   nopl   0x5000938(%rax,%rax,1)       ;   {other}
  0x000000011ba9e650:   mov    $0xffffffde,%esi
  0x000000011ba9e655:   mov    %rbx,%rbp
  0x000000011ba9e658:   mov    %rdx,(%rsp)
  0x000000011ba9e65c:   mov    %r11d,0x8(%rsp)
  0x000000011ba9e661:   xchg   %ax,%ax
  0x000000011ba9e663:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=NarrowOop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@96 (line 70)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e668:   nopl   0x6000958(%rax,%rax,1)       ;   {other}
  0x000000011ba9e670:   mov    $0xffffffde,%esi
  0x000000011ba9e675:   mov    %rbx,%rbp
  0x000000011ba9e678:   mov    %rdx,(%rsp)
  0x000000011ba9e67c:   mov    %r11d,0x8(%rsp)
  0x000000011ba9e681:   xchg   %ax,%ax
  0x000000011ba9e683:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=NarrowOop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@74 (line 66)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e688:   nopl   0x7000978(%rax,%rax,1)       ;   {other}
  0x000000011ba9e690:   mov    $0xffffffde,%esi
  0x000000011ba9e695:   mov    %rbx,%rbp
  0x000000011ba9e698:   mov    %rdx,(%rsp)
  0x000000011ba9e69c:   mov    %r11d,0x8(%rsp)
  0x000000011ba9e6a1:   xchg   %ax,%ax
  0x000000011ba9e6a3:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=NarrowOop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@118 (line 74)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e6a8:   nopl   0x8000998(%rax,%rax,1)       ;   {other}
  0x000000011ba9e6b0:   mov    $0xffffffde,%esi
  0x000000011ba9e6b5:   mov    %rbx,%rbp
  0x000000011ba9e6b8:   mov    %rdx,(%rsp)
  0x000000011ba9e6bc:   mov    %r11d,0x8(%rsp)
  0x000000011ba9e6c1:   xchg   %ax,%ax
  0x000000011ba9e6c3:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=NarrowOop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@53 (line 62)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e6c8:   nopl   0x90009b8(%rax,%rax,1)       ;   {other}
  0x000000011ba9e6d0:   mov    $0xffffffde,%esi
  0x000000011ba9e6d5:   mov    %rbx,%rbp
  0x000000011ba9e6d8:   mov    %rdx,(%rsp)
  0x000000011ba9e6dc:   mov    %r11d,0x8(%rsp)
  0x000000011ba9e6e1:   xchg   %ax,%ax
  0x000000011ba9e6e3:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=NarrowOop }
                                                            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@140 (line 78)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e6e8:   nopl   0xa0009d8(%rax,%rax,1)       ;   {other}
  0x000000011ba9e6f0:   mov    $0xffffff45,%esi
  0x000000011ba9e6f5:   mov    %rbx,%rbp
  0x000000011ba9e6f8:   mov    %rdx,(%rsp)
  0x000000011ba9e6fc:   mov    %r11d,0xc(%rsp)
  0x000000011ba9e701:   mov    %r11d,0x10(%rsp)
  0x000000011ba9e706:   nop
  0x000000011ba9e707:   call   0x000000011b522f00           ; ImmutableOopMap {rbp=Oop [0]=Oop [12]=NarrowOop [16]=NarrowOop }
                                                            ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Objects::requireNonNull@1 (line 232)
                                                            ; - dev.jgardo.ClassBenchmark::patternMatching@5 (line 61)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x000000011ba9e70c:   nopl   0xb0009fc(%rax,%rax,1)       ;   {other}
  0x000000011ba9e714:   movabs $0x11ba9e254,%r10            ;   {internal_word}
  0x000000011ba9e71e:   mov    %r10,0x468(%r15)
  0x000000011ba9e725:   jmp    0x000000011b524000           ;   {runtime_call SafepointBlob}
  0x000000011ba9e72a:   call   Stub::nmethod_entry_barrier  ;   {runtime_call StubRoutines (final stubs)}
  0x000000011ba9e72f:   jmp    0x000000011ba9df5a
  0x000000011ba9e734:   hlt    
  0x000000011ba9e735:   hlt    
  0x000000011ba9e736:   hlt    
  0x000000011ba9e737:   hlt    
[Exception Handler]
  0x000000011ba9e738:   jmp    0x000000011b5e5300           ;   {no_reloc}
[Deopt Handler Code]
  0x000000011ba9e73d:   call   0x000000011ba9e742
  0x000000011ba9e742:   subq   $0x5,(%rsp)
  0x000000011ba9e747:   jmp    0x000000011b5232a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011ba9e74c:   hlt    
  0x000000011ba9e74d:   hlt    
  0x000000011ba9e74e:   hlt    
  0x000000011ba9e74f:   hlt    
--------------------------------------------------------------------------------
[/Disassembly]
